version: "3.8"

services:

  auth_service:
    image: auth_service
    build:
      context: .
      dockerfile: ./Auth/Dockerfile
    restart: always
    container_name: 'auth_service'
    hostname: 'auth_service'
    ports:
      - ${AUTH_SERVICE_PORT}:${AUTH_SERVICE_PORT}
    environment:
      - MONGO_DB_URI=mongodb://auth_db:27017
      - app_port=${AUTH_SERVICE_PORT}
    depends_on:
      auth_db:
        condition: service_healthy

  tweet_service:
    image: tweet_service
    build:
      context: .
      dockerfile: ./Tweet/Dockerfile
    restart: always
    container_name: 'tweet_service'
    hostname: 'tweet_service'
    ports:
      - ${TWEET_SERVICE_PORT}:${TWEET_SERVICE_PORT}
    environment:
      - MONGO_DB_URI=mongodb://tweet_db:27017
      - app_port=${TWEET_SERVICE_PORT}
    depends_on:
      tweet_db:
        condition: service_healthy

  auth_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: mongoDemo
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoAuth

  tweet_db:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_DATABASE: mongoDemo
    # Docker healtcheck - checks if database is "alive"
    healthcheck:
      test: echo 'db.runCommand("ping").ok'
    volumes:
      - mongo_store:/data/mongoTweet

volumes:
    mongo_store:
    mong_express_data: